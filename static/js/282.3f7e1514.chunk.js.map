{"version":3,"file":"static/js/282.3f7e1514.chunk.js","mappings":"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","sources":["components/shared/customInput/customInput.jsx","components/shared/customInput/customInput.styles.js","components/shared/customButton/customButton.jsx","components/sections/login/_hooks/useLoginSchema.js","components/sections/login/_hooks/useHandleChange.js","helpers/useYupValidation.js","components/sections/login/form.styles.js","components/sections/login/form.jsx","pages/login.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  FormControl,\r\n  InputLabel,\r\n  OutlinedInput,\r\n  InputAdornment,\r\n  IconButton,\r\n  FormHelperText,\r\n} from \"@mui/material\";\r\nimport { input } from \"./customInput.styles\";\r\nimport { themes } from \"helpers/useThemes\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst CustomInput = ({\r\n  label,\r\n  error,\r\n  type,\r\n  value,\r\n  Icon,\r\n  onIconeKeyDown,\r\n  onIconeKeyUp,\r\n  errorMessage,\r\n  ...rest\r\n}) => {\r\n  const { theme } = useSelector((state) => state.AuthReducer);\r\n  return (\r\n    <>\r\n      <FormControl\r\n        sx={{\r\n          mb: !!!error && 2,\r\n          width: \"100%\",\r\n          background: themes[theme].inputs,\r\n        }}\r\n        variant=\"outlined\"\r\n        error={!!error}\r\n      >\r\n        <OutlinedInput\r\n          sx={input(!!error)}\r\n          id={label}\r\n          autoComplete=\"new-password\"\r\n          type={type}\r\n          value={value}\r\n          endAdornment={\r\n            <InputAdornment position=\"end\">\r\n              <IconButton\r\n                onMouseDown={onIconeKeyDown}\r\n                onMouseUp={onIconeKeyUp}\r\n                aria-label=\"toggle password visibility\"\r\n                edge=\"end\"\r\n              >\r\n                {Icon}\r\n              </IconButton>\r\n            </InputAdornment>\r\n          }\r\n          placeholder={label}\r\n          {...rest}\r\n        />\r\n      </FormControl>\r\n      {error && (\r\n        <FormHelperText sx={{ marginBottom: 2 }} error>\r\n          {errorMessage}\r\n        </FormHelperText>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CustomInput;\r\n","export const input = (err) => ({\r\n  \"&:focus-within fieldset, &:focus-visible fieldset\": {\r\n    border: !err && \"2px solid #00cec9!important\",\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst CustomButton = ({ text, type, color, styles, ...rest }) => {\r\n  return (\r\n    <Button\r\n      variant={type}\r\n      sx={{\r\n        backgroundColor: type === \"contained\" && color,\r\n        color: type === \"contained\" ? \"#fff\" : color,\r\n        border: `1px solid ${color}`,\r\n        \"&: hover\": {\r\n          backgroundColor: type === \"contained\" && color,\r\n          color: type === \"contained\" ? \"#fff\" : color,\r\n          border: `1px solid ${color}`,\r\n        },\r\n        ...styles,\r\n      }}\r\n      {...rest}\r\n    >\r\n      {text}\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default CustomButton;\r\n","import { string, object } from \"yup\";\r\n\r\nexport const loginSchema = object().shape({\r\n  username: string().required(),\r\n  password: string().min(8).required(),\r\n});\r\n","import { validateProperty } from \"helpers/useYupValidation\";\r\nimport { loginSchema } from \"./useLoginSchema\";\r\n\r\nexport const handleChange = (target, formState, setFormState) => {\r\n  setFormState({\r\n    ...formState,\r\n    values: { ...formState.values, [target.name]: target.value },\r\n  });\r\n  validateProperty(target, loginSchema).then((valid) => {\r\n    setFormState((prev) => ({\r\n      ...prev,\r\n      errors: { ...formState.errors, [target.name]: !valid },\r\n    }));\r\n  });\r\n};\r\n\r\nexport const buttonDisabled = (formState) => {\r\n  if (\r\n    formState.errors?.password ||\r\n    formState.errors?.username ||\r\n    !!!formState.values?.username ||\r\n    !!!formState.values?.password\r\n  ) {\r\n    return true;\r\n  }\r\n};\r\n","import * as yup from \"yup\";\r\nconst validate = (schema, data) => schema.isValid(data, (valid) => valid);\r\n\r\nexport const validateProperty = (input, schema) => {\r\n  const fieldSchema = yup\r\n    .object()\r\n    .shape({ [input.name]: schema[\"fields\"][input.name] });\r\n  return validate(fieldSchema, { [input.name]: input.value });\r\n};\r\n","export const formContainer = () => ({\r\n  width: \"100%\",\r\n  height: 600,\r\n  display: \"flex\",\r\n  alignItems: \"center\",\r\n  justifyContent: \"center\",\r\n});\r\n\r\nexport const formBody = (bg,textColor) => ({\r\n  background: bg,\r\n  color:textColor,\r\n  borderRadius: 1,\r\n  width: 400,\r\n  padding: 7,\r\n  boxShadow:\r\n    \" rgba(50, 50, 93, 0.25) 0px 50px 100px -20px, rgba(0, 0, 0, 0.3) 0px 30px 60px -30px\",\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport RemoveRedEyeIcon from \"@mui/icons-material/RemoveRedEye\";\r\nimport CustomInput from \"components/shared/customInput/customInput\";\r\nimport CustomButton from \"components/shared/customButton/customButton\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setUser } from \"store/actions/authActions\";\r\nimport { handleChange, buttonDisabled } from \"./_hooks/useHandleChange\";\r\nimport { set } from \"helpers/useSessions\";\r\nimport { formBody, formContainer } from \"./form.styles\";\r\nimport { themes } from \"helpers/useThemes\";\r\n\r\nconst Form = () => {\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const authData = useSelector((state) => state?.AuthReducer);\r\n  const [formState, setFormState] = useState({});\r\n  const navigate = useNavigate();\r\n  const handleSubmit = () => {\r\n    set(\"user\", formState.values?.username);\r\n    set(\"likes\", []);\r\n    dispatch(setUser(formState.values?.username));\r\n    navigate(\"/moviesApp\");\r\n  };\r\n  useEffect(() => {\r\n    if (authData.user) return navigate(\"/moviesApp\");\r\n  }, []);\r\n  return (\r\n    <Box sx={formContainer}>\r\n      <Box\r\n        sx={formBody(\r\n          themes[authData.theme].childrenBackgrounds,\r\n          themes[authData.theme].textColor\r\n        )}\r\n      >\r\n        <Typography textAlign={\"center\"} variant=\"h6\">\r\n          Login Form\r\n        </Typography>\r\n        <CustomInput\r\n          label={\"Username\"}\r\n          error={!!formState.errors?.username}\r\n          Icon={<AccountCircleIcon />}\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          errorMessage={\"Please enter a valid username\"}\r\n          onChange={(e) => handleChange(e.target, formState, setFormState)}\r\n        />\r\n        <CustomInput\r\n          label={\"Password\"}\r\n          error={!!formState.errors?.password}\r\n          onIconeKeyDown={() => setShowPassword(true)}\r\n          onIconeKeyUp={() => setShowPassword(false)}\r\n          Icon={showPassword ? <RemoveRedEyeIcon /> : <VisibilityOffIcon />}\r\n          type={showPassword ? \"text\" : \"password\"}\r\n          onChange={(e) => handleChange(e.target, formState, setFormState)}\r\n          errorMessage={\"Please enter a stronger password\"}\r\n          id=\"password\"\r\n          name=\"password\"\r\n        />\r\n        <CustomButton\r\n          text={\"Login\"}\r\n          type=\"contained\"\r\n          color={\"#00cec9\"}\r\n          styles={{ width: \"100%\" }}\r\n          onClick={handleSubmit}\r\n          disabled={buttonDisabled(formState)}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\nimport Form from \"components/sections/login/form\";\r\n\r\nconst Login = () => {\r\n  return <Form />;\r\n};\r\n\r\nexport default Login;\r\n"],"names":["err","label","error","type","value","Icon","onIconeKeyDown","onIconeKeyUp","errorMessage","rest","theme","useSelector","state","AuthReducer","FormControl","sx","mb","width","background","themes","inputs","variant","OutlinedInput","border","id","autoComplete","endAdornment","InputAdornment","position","IconButton","onMouseDown","onMouseUp","edge","placeholder","FormHelperText","marginBottom","text","color","styles","Button","backgroundColor","loginSchema","object","shape","username","string","required","password","min","handleChange","target","formState","setFormState","values","name","input","schema","data","isValid","valid","validate","yup","validateProperty","then","prev","errors","buttonDisabled","formContainer","height","display","alignItems","justifyContent","bg","textColor","useState","showPassword","setShowPassword","dispatch","useDispatch","authData","navigate","useNavigate","useEffect","user","Box","childrenBackgrounds","borderRadius","padding","boxShadow","Typography","textAlign","AccountCircle","onChange","e","RemoveRedEye","VisibilityOff","onClick","set","setUser","disabled"],"sourceRoot":""}